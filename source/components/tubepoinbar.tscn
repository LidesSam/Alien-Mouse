[gd_scene load_steps=2 format=3 uid="uid://dcj8tlv13thuv"]

[sub_resource type="GDScript" id="GDScript_k5eb3"]
script/source = "extends \"res://source/elements/components/pointsbar.gd\"

var disposition =0
@export var inverse_fill = false
var depletion=0 #make it slowl
var frames = load(\"res://assets/sprites/components/tubebar.tres\")
@export var centerpoint=false
# Called when the node enters the scene tree for the first time.
func _ready():
	#gen_h_tube(5)
	update_hud()
	pass # Replace with function body.

func gen_v_tube(points=3,full=true,alt=false):
	get_children().clear()
	maxGp=points
	if(full):
		gp=maxGp
	else:
		gp=0
	var last = maxGp-1
	for i in range(maxGp):	
		var p = AnimatedSprite2D.new()
		p.frames = frames
		p.position = Vector2(0,0-i*8+4)
		p.use_parent_material=true
		match (i):
			0:	
				p.play(\"d-tube\")
			last:
				p.play(\"u-tube\")
			_:
				p.play(\"m-v-tube\")
		p.stop()
		add_child(p)
		
	update_hud()

func gen_h_tube(points=3,full=true,alt=false):
	get_children().clear()
	maxGp=points
	if(full):
		gp=maxGp
	else:
		gp=0
	var last =maxGp-1
	for i in range(maxGp):	
		var p = AnimatedSprite2D.new()
		p.frames = frames
		p.position = Vector2(-maxGp*8/2+i*8+4,0)
		p.use_parent_material=true
		match (i):
			0:
				p.play(\"l-tube\")
			last:
				p.play(\"r-tube\")
			_:
				p.play(\"m-h-tube\")
		p.stop()
		add_child(p)
		
	update_hud()
	
func update_hud():
	var i =0
	for p in get_children():
		if(inverse_fill!=true):
			if i <=gp:
				p.set_frame_and_progress(0,0)
			else:
				p.set_frame_and_progress(1,1)
		else:
			if i <=gp:
				p.set_frame_and_progress(1,1)
			else:
				p.set_frame_and_progress(0,0)
		i+=1

#func _process(delta):
#	pass


"

[node name="tubepointbar" type="Node2D"]
use_parent_material = true
script = SubResource("GDScript_k5eb3")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
animation = &""
